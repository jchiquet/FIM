variances <- as.data.frame(VarCorr(est.mle))
resIobs.theta.est[,,k] <- Iobs_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
resIsco.theta.est[,,k] <- Isco_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
## Coverage rates of confidence ellipsoids ...
theta.est <- matrix(c(est.mle@beta,variances[1,'vcov'],variances[2,'vcov']),ncol=1)
unit.vect <- matrix(rep(1,length(theta.est)),ncol=1)
## ... based on the true Fisher information matrix
#conf.inf.fisher.true <- theta.est -
#  1.96/sqrt(n)*sqrt(diag(solve(fisher)))
#conf.sup.fisher.true <- theta.est +
#  1.96/sqrt(n)*sqrt(diag(solve(fisher)))
#coverage.true.fisher <- coverage.true.fisher +
#  (theta.true<=conf.sup.fisher.true)*(theta.true>=conf.inf.fisher.true)
coverage.true.fisher <- coverage.true.fisher +
(n*t(as.matrix(theta.true-theta.est))%*%fisher%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Isco computed in the MLE value of the parameters
# conf.inf.isco.theta.est <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.est[,,k])))
# conf.sup.isco.theta.est <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.est[,,k])))
#
# coverage.isco.theta.est <- coverage.isco.theta.est +
#   (theta.true<=conf.sup.isco.theta.est)*(theta.true>=conf.inf.isco.theta.est)
coverage.isco.theta.est <- coverage.isco.theta.est +
(n*t(as.matrix(theta.true-theta.est))%*%resIsco.theta.est[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Isco computed in the true parameter values
# conf.inf.isco.theta.true <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.true[,,k])))
# conf.sup.isco.theta.true <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.true[,,k])))
#
# coverage.isco.theta.true <- coverage.isco.theta.true +
#   (theta.true<=conf.sup.isco.theta.true)*(theta.true>=conf.inf.isco.theta.true)
coverage.isco.theta.true <- coverage.isco.theta.true +
(n*t(as.matrix(theta.true-theta.est))%*%resIsco.theta.true[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Iobs computed in the MLE value of the parameters
# conf.inf.iobs.theta.est <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.est[,,k])))
# conf.sup.iobs.theta.est <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.est[,,k])))
#
# coverage.iobs.theta.est <- coverage.iobs.theta.est +
#   (theta.true<=conf.sup.iobs.theta.est)*(theta.true>=conf.inf.iobs.theta.est)
coverage.iobs.theta.est <- coverage.iobs.theta.est +
(n*t(as.matrix(theta.true-theta.est))%*%resIobs.theta.est[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Iobs computed in the true parameter values
# conf.inf.iobs.theta.true <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.true[,,k])))
# conf.sup.iobs.theta.true <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.true[,,k])))
#
# coverage.iobs.theta.true <- coverage.iobs.theta.true +
#   (theta.true<=conf.sup.iobs.theta.true)*(theta.true>=conf.inf.iobs.theta.true)
coverage.iobs.theta.true <- coverage.iobs.theta.true +
(n*t(as.matrix(theta.true-theta.est))%*%resIobs.theta.true[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
}
EstF11 <- c(EstF11,c(resIsco.theta.true[1,1,]-fisher[1,1],
resIobs.theta.true[1,1,]-fisher[1,1]))
EstF22 <- c(EstF22,c(resIsco.theta.true[2,2,]-fisher[2,2],
resIobs.theta.true[2,2,]-fisher[2,2]))
EstF33 <- c(EstF33,c(resIsco.theta.true[3,3,]-fisher[3,3],
resIobs.theta.true[3,3,]-fisher[3,3]))
EstF12 <- c(EstF12,c(resIsco.theta.true[1,2,]-fisher[1,2],
resIobs.theta.true[1,2,]-fisher[1,2]))
EstF13 <- c(EstF13,c(resIsco.theta.true[1,3,]-fisher[1,3],
resIobs.theta.true[1,3,]-fisher[1,3]))
EstF23 <- c(EstF23,c(resIsco.theta.true[2,3,]-fisher[2,3],
resIobs.theta.true[2,3,]-fisher[2,3]))
}
library(lme4)
for (n in seq.n){
## definition of the objects to store the estimation of the Fisher Information
## matrix
resIobs.theta.true <- array(NA,dim=c(3,3,nsim))
resIsco.theta.true <- array(NA,dim=c(3,3,nsim))
resIobs.theta.est  <- array(NA,dim=c(3,3,nsim))
resIsco.theta.est  <- array(NA,dim=c(3,3,nsim))
EstF11 <- c()
EstF22 <- c()
EstF33 <- c()
EstF12 <- c()
EstF13 <- c()
EstF23 <- c()
## counters for the estimation of the coverage rates
coverage.iobs.theta.est <- 0
coverage.isco.theta.est <- 0
coverage.iobs.theta.true <- 0
coverage.isco.theta.true <- 0
coverage.true.fisher <- 0
for (k in 1:nsim){
## data simulation
random    <- rnorm(n,0,sqrt(eta2))
residual  <- rnorm(n*j,0,sqrt(sigma2))
randompop <- rep(random,j)
id        <- rep(seq(1,n),j)
obs       <- beta+randompop+residual
datamat   <- matrix(obs,n,j)
## computation of the FIM estimators when knowing the true parameter values --
resIobs.theta.true[,,k] <- Iobs_LMM(datamat,beta,sigma2,eta2)
resIsco.theta.true[,,k] <- Isco_LMM(datamat,beta,sigma2,eta2)
## computation of the FIM estimators together with the parameter values ----
est.mle   <- lmer(obs~(1|id),REML = F)
variances <- as.data.frame(VarCorr(est.mle))
resIobs.theta.est[,,k] <- Iobs_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
resIsco.theta.est[,,k] <- Isco_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
## Coverage rates of confidence ellipsoids ...
theta.est <- matrix(c(est.mle@beta,variances[1,'vcov'],variances[2,'vcov']),ncol=1)
unit.vect <- matrix(rep(1,length(theta.est)),ncol=1)
## ... based on the true Fisher information matrix
#conf.inf.fisher.true <- theta.est -
#  1.96/sqrt(n)*sqrt(diag(solve(fisher)))
#conf.sup.fisher.true <- theta.est +
#  1.96/sqrt(n)*sqrt(diag(solve(fisher)))
#coverage.true.fisher <- coverage.true.fisher +
#  (theta.true<=conf.sup.fisher.true)*(theta.true>=conf.inf.fisher.true)
coverage.true.fisher <- coverage.true.fisher +
(n*t(as.matrix(theta.true-theta.est))%*%fisher%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Isco computed in the MLE value of the parameters
# conf.inf.isco.theta.est <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.est[,,k])))
# conf.sup.isco.theta.est <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.est[,,k])))
#
# coverage.isco.theta.est <- coverage.isco.theta.est +
#   (theta.true<=conf.sup.isco.theta.est)*(theta.true>=conf.inf.isco.theta.est)
coverage.isco.theta.est <- coverage.isco.theta.est +
(n*t(as.matrix(theta.true-theta.est))%*%resIsco.theta.est[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Isco computed in the true parameter values
# conf.inf.isco.theta.true <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.true[,,k])))
# conf.sup.isco.theta.true <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIsco.theta.true[,,k])))
#
# coverage.isco.theta.true <- coverage.isco.theta.true +
#   (theta.true<=conf.sup.isco.theta.true)*(theta.true>=conf.inf.isco.theta.true)
coverage.isco.theta.true <- coverage.isco.theta.true +
(n*t(as.matrix(theta.true-theta.est))%*%resIsco.theta.true[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Iobs computed in the MLE value of the parameters
# conf.inf.iobs.theta.est <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.est[,,k])))
# conf.sup.iobs.theta.est <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.est[,,k])))
#
# coverage.iobs.theta.est <- coverage.iobs.theta.est +
#   (theta.true<=conf.sup.iobs.theta.est)*(theta.true>=conf.inf.iobs.theta.est)
coverage.iobs.theta.est <- coverage.iobs.theta.est +
(n*t(as.matrix(theta.true-theta.est))%*%resIobs.theta.est[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
## ... based on Iobs computed in the true parameter values
# conf.inf.iobs.theta.true <- theta.est -
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.true[,,k])))
# conf.sup.iobs.theta.true <- theta.est +
#   1.96/sqrt(n)*sqrt(diag(solve(resIobs.theta.true[,,k])))
#
# coverage.iobs.theta.true <- coverage.iobs.theta.true +
#   (theta.true<=conf.sup.iobs.theta.true)*(theta.true>=conf.inf.iobs.theta.true)
coverage.iobs.theta.true <- coverage.iobs.theta.true +
(n*t(as.matrix(theta.true-theta.est))%*%resIobs.theta.true[,,k]%*%as.matrix(theta.true-theta.est)
<= qchisq(rate,3))
}
EstF11 <- c(EstF11,c(resIsco.theta.true[1,1,]-fisher[1,1],
resIobs.theta.true[1,1,]-fisher[1,1]))
EstF22 <- c(EstF22,c(resIsco.theta.true[2,2,]-fisher[2,2],
resIobs.theta.true[2,2,]-fisher[2,2]))
EstF33 <- c(EstF33,c(resIsco.theta.true[3,3,]-fisher[3,3],
resIobs.theta.true[3,3,]-fisher[3,3]))
EstF12 <- c(EstF12,c(resIsco.theta.true[1,2,]-fisher[1,2],
resIobs.theta.true[1,2,]-fisher[1,2]))
EstF13 <- c(EstF13,c(resIsco.theta.true[1,3,]-fisher[1,3],
resIobs.theta.true[1,3,]-fisher[1,3]))
EstF23 <- c(EstF23,c(resIsco.theta.true[2,3,]-fisher[2,3],
resIobs.theta.true[2,3,]-fisher[2,3]))
}
theta.est
nsim <- 500            # number of replicates
seq.n <- c(20,100,500) # number of individuals
j    <- 12             # number of observations per individual
## parameter values
beta   <- 3
sigma2 <- 5
eta2   <- 2
theta.true <- matrix(c(beta,eta2,sigma2),ncol=1)
## expected coverage rate
rate <- 0.95
## computation of the exact FIM
fisher <- Fisher_LMM(beta,sigma2,eta2,j)
## loop executing the nsim replicates of the experiment
for (n in seq.n){
## definition of the objects to store the estimation of the Fisher Information
## matrix
resIobs.theta.true <- array(NA,dim=c(3,3,nsim))
resIsco.theta.true <- array(NA,dim=c(3,3,nsim))
resIobs.theta.est  <- array(NA,dim=c(3,3,nsim))
resIsco.theta.est  <- array(NA,dim=c(3,3,nsim))
EstF11 <- c()
EstF22 <- c()
EstF33 <- c()
EstF12 <- c()
EstF13 <- c()
EstF23 <- c()
beta.est   <- c()
eta2.est   <- c()
sigma2.est <- c()
## counters for the estimation of the coverage rates
coverage.iobs.theta.est <- 0
coverage.isco.theta.est <- 0
coverage.iobs.theta.true <- 0
coverage.isco.theta.true <- 0
coverage.true.fisher <- 0
for (k in 1:nsim){
## data simulation
random    <- rnorm(n,0,sqrt(eta2))
residual  <- rnorm(n*j,0,sqrt(sigma2))
randompop <- rep(random,j)
id        <- rep(seq(1,n),j)
obs       <- beta+randompop+residual
datamat   <- matrix(obs,n,j)
## computation of the FIM estimators when knowing the true parameter values --
resIobs.theta.true[,,k] <- Iobs_LMM(datamat,beta,sigma2,eta2)
resIsco.theta.true[,,k] <- Isco_LMM(datamat,beta,sigma2,eta2)
## computation of the FIM estimators together with the parameter values ----
est.mle   <- lmer(obs~(1|id),REML = F)
variances <- as.data.frame(VarCorr(est.mle))
resIobs.theta.est[,,k] <- Iobs_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
resIsco.theta.est[,,k] <- Isco_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
beta.est   <- c(beta.est,est.mle@beta)
eta2.est   <- c(eta2.est,variances[1,'vcov'])
sigma2.est <- c(sigma2.est,variances[1,'vcov'])
}
EstF11 <- c(EstF11,c(resIsco.theta.true[1,1,]-fisher[1,1],
resIobs.theta.true[1,1,]-fisher[1,1]))
EstF22 <- c(EstF22,c(resIsco.theta.true[2,2,]-fisher[2,2],
resIobs.theta.true[2,2,]-fisher[2,2]))
EstF33 <- c(EstF33,c(resIsco.theta.true[3,3,]-fisher[3,3],
resIobs.theta.true[3,3,]-fisher[3,3]))
EstF12 <- c(EstF12,c(resIsco.theta.true[1,2,]-fisher[1,2],
resIobs.theta.true[1,2,]-fisher[1,2]))
EstF13 <- c(EstF13,c(resIsco.theta.true[1,3,]-fisher[1,3],
resIobs.theta.true[1,3,]-fisher[1,3]))
EstF23 <- c(EstF23,c(resIsco.theta.true[2,3,]-fisher[2,3],
resIobs.theta.true[2,3,]-fisher[2,3]))
}
length(beta.est)
length(eta2.est)
DataRes <- data.frame(EstF11=EstF11, EstF22=EstF22, EstF33=EstF33,
EstF12=EstF12, EstF13=EstF13, EstF23=EstF23,
beta.est=beta.est, eta2.est=eta2.est, sigma2.est=sigma2.est,
Estimate=rep(c(rep('I n,sco',nsim),rep('I n,obs',nsim)),
length(seq.n)),
n=rep(seq.n,each=nsim*2)
)
str(DataRes)
getwd()
save(DataRes,file="scripts/simusLMM.Rdata")
save(DataRes,file="Rfiles/simusLMM.Rdata")
## R script for the numerical study in the linear mixed effects model
## ------------------------------------------------------------------
nsim <- 500            # number of replicates
seq.n <- c(20,100,500) # number of individuals
j    <- 12             # number of observations per individual
## parameter values
beta   <- 3
sigma2 <- 5
eta2   <- 2
theta.true <- matrix(c(beta,eta2,sigma2),ncol=1)
## computation of the exact FIM
fisher <- Fisher_LMM(beta,sigma2,eta2,j)
## loop executing the nsim replicates of the experiment
for (n in seq.n){
## definition of the objects to store the estimation of the Fisher Information
## matrix
resIobs.theta.true <- array(NA,dim=c(3,3,nsim))
resIsco.theta.true <- array(NA,dim=c(3,3,nsim))
resIobs.theta.est  <- array(NA,dim=c(3,3,nsim))
resIsco.theta.est  <- array(NA,dim=c(3,3,nsim))
EstF11 <- c()
EstF22 <- c()
EstF33 <- c()
EstF12 <- c()
EstF13 <- c()
EstF23 <- c()
beta.est   <- c()
eta2.est   <- c()
sigma2.est <- c()
## counters for the estimation of the coverage rates
coverage.iobs.theta.est <- 0
coverage.isco.theta.est <- 0
coverage.iobs.theta.true <- 0
coverage.isco.theta.true <- 0
coverage.true.fisher <- 0
for (k in 1:nsim){
## data simulation
random    <- rnorm(n,0,sqrt(eta2))
residual  <- rnorm(n*j,0,sqrt(sigma2))
randompop <- rep(random,j)
id        <- rep(seq(1,n),j)
obs       <- beta+randompop+residual
datamat   <- matrix(obs,n,j)
## computation of the FIM estimators when knowing the true parameter values --
resIobs.theta.true[,,k] <- Iobs_LMM(datamat,beta,sigma2,eta2)
resIsco.theta.true[,,k] <- Isco_LMM(datamat,beta,sigma2,eta2)
## computation of the FIM estimators together with the parameter values ----
est.mle   <- lmer(obs~(1|id),REML = F)
variances <- as.data.frame(VarCorr(est.mle))
beta.est   <- c(beta.est,est.mle@beta)
eta2.est   <- c(eta2.est,variances[1,'vcov'])
sigma2.est <- c(sigma2.est,variances[1,'vcov'])
resIobs.theta.est[,,k] <- Iobs_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
resIsco.theta.est[,,k] <- Isco_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
}
EstF11.true <- c(EstF11.true,c(resIsco.theta.true[1,1,]-fisher[1,1],
resIobs.theta.true[1,1,]-fisher[1,1]))
EstF22.true <- c(EstF22.true,c(resIsco.theta.true[2,2,]-fisher[2,2],
resIobs.theta.true[2,2,]-fisher[2,2]))
EstF33.true <- c(EstF33.true,c(resIsco.theta.true[3,3,]-fisher[3,3],
resIobs.theta.true[3,3,]-fisher[3,3]))
EstF12.true <- c(EstF12.true,c(resIsco.theta.true[1,2,]-fisher[1,2],
resIobs.theta.true[1,2,]-fisher[1,2]))
EstF13.true <- c(EstF13.true,c(resIsco.theta.true[1,3,]-fisher[1,3],
resIobs.theta.true[1,3,]-fisher[1,3]))
EstF23.true <- c(EstF23.true,c(resIsco.theta.true[2,3,]-fisher[2,3],
resIobs.theta.true[2,3,]-fisher[2,3]))
EstF11.est <- c(EstF11.est,c(resIsco.theta.est[1,1,]-fisher[1,1],
resIobs.theta.est[1,1,]-fisher[1,1]))
EstF22.est <- c(EstF22.est,c(resIsco.theta.est[2,2,]-fisher[2,2],
resIobs.theta.est[2,2,]-fisher[2,2]))
EstF33.est <- c(EstF33.est,c(resIsco.theta.est[3,3,]-fisher[3,3],
resIobs.theta.est[3,3,]-fisher[3,3]))
EstF12.est <- c(EstF12.est,c(resIsco.theta.est[1,2,]-fisher[1,2],
resIobs.theta.est[1,2,]-fisher[1,2]))
EstF13.est <- c(EstF13.est,c(resIsco.theta.est[1,3,]-fisher[1,3],
resIobs.theta.est[1,3,]-fisher[1,3]))
EstF23.est <- c(EstF23.est,c(resIsco.theta.est[2,3,]-fisher[2,3],
resIobs.theta.est[2,3,]-fisher[2,3]))
}
DataRes <- data.frame(EstF11.true=EstF11.true, EstF22.true=EstF22.true,
EstF33.true=EstF33.true, EstF12.true=EstF12.true,
EstF13.true=EstF13.true, EstF23.true=EstF23.true,
EstF11.est=EstF11.est, EstF22.est=EstF22.est,
EstF33.est=EstF33.est, EstF12.est=EstF12.est,
EstF13.est=EstF13.est, EstF23.est=EstF23.est,
beta.est=beta.est, eta2.est=eta2.est, sigma2.est=sigma2.est,
Estimate=rep(c(rep('I n,sco',nsim),rep('I n,obs',nsim)),
length(seq.n)),
n=rep(seq.n,each=nsim*2)
)
save(DataRes,file="Rfiles/simusLMM.Rdata")
load('Rfiles/simusLMM.Rdata')
DataRes.n <- DataRes %>% filter(n==500)
#| label: loadlibrary
#| echo: false
library(dplyr)
DataRes.n <- DataRes %>% filter(n==500)
str(DataRes.n)
## R script for the numerical study in the linear mixed effects model
## ------------------------------------------------------------------
nsim <- 500            # number of replicates
seq.n <- c(20,100,500) # number of individuals
j    <- 12             # number of observations per individual
## parameter values
beta   <- 3
sigma2 <- 5
eta2   <- 2
theta.true <- matrix(c(beta,eta2,sigma2),ncol=1)
## computation of the exact FIM
fisher <- Fisher_LMM(beta,sigma2,eta2,j)
## loop executing the nsim replicates of the experiment
for (n in seq.n){
## definition of the objects to store the estimation of the Fisher Information
## matrix
resIobs.theta.true <- array(NA,dim=c(3,3,nsim))
resIsco.theta.true <- array(NA,dim=c(3,3,nsim))
resIobs.theta.est  <- array(NA,dim=c(3,3,nsim))
resIsco.theta.est  <- array(NA,dim=c(3,3,nsim))
EstF11.true <- c()
EstF22.true <- c()
EstF33.true <- c()
EstF12.true <- c()
EstF13.true <- c()
EstF23.true <- c()
EstF11.est <- c()
EstF22.est <- c()
EstF33.est <- c()
EstF12.est <- c()
EstF13.est <- c()
EstF23.est <- c()
beta.est   <- c()
eta2.est   <- c()
sigma2.est <- c()
## counters for the estimation of the coverage rates
coverage.iobs.theta.est <- 0
coverage.isco.theta.est <- 0
coverage.iobs.theta.true <- 0
coverage.isco.theta.true <- 0
coverage.true.fisher <- 0
for (k in 1:nsim){
## data simulation
random    <- rnorm(n,0,sqrt(eta2))
residual  <- rnorm(n*j,0,sqrt(sigma2))
randompop <- rep(random,j)
id        <- rep(seq(1,n),j)
obs       <- beta+randompop+residual
datamat   <- matrix(obs,n,j)
## computation of the FIM estimators when knowing the true parameter values --
resIobs.theta.true[,,k] <- Iobs_LMM(datamat,beta,sigma2,eta2)
resIsco.theta.true[,,k] <- Isco_LMM(datamat,beta,sigma2,eta2)
## computation of the FIM estimators together with the parameter values ----
est.mle   <- lmer(obs~(1|id),REML = F)
variances <- as.data.frame(VarCorr(est.mle))
beta.est   <- c(beta.est,est.mle@beta)
eta2.est   <- c(eta2.est,variances[1,'vcov'])
sigma2.est <- c(sigma2.est,variances[1,'vcov'])
resIobs.theta.est[,,k] <- Iobs_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
resIsco.theta.est[,,k] <- Isco_LMM(datamat,est.mle@beta,variances[2,'vcov'],
variances[1,'vcov'])
}
EstF11.true <- c(EstF11.true,c(resIsco.theta.true[1,1,]-fisher[1,1],
resIobs.theta.true[1,1,]-fisher[1,1]))
EstF22.true <- c(EstF22.true,c(resIsco.theta.true[2,2,]-fisher[2,2],
resIobs.theta.true[2,2,]-fisher[2,2]))
EstF33.true <- c(EstF33.true,c(resIsco.theta.true[3,3,]-fisher[3,3],
resIobs.theta.true[3,3,]-fisher[3,3]))
EstF12.true <- c(EstF12.true,c(resIsco.theta.true[1,2,]-fisher[1,2],
resIobs.theta.true[1,2,]-fisher[1,2]))
EstF13.true <- c(EstF13.true,c(resIsco.theta.true[1,3,]-fisher[1,3],
resIobs.theta.true[1,3,]-fisher[1,3]))
EstF23.true <- c(EstF23.true,c(resIsco.theta.true[2,3,]-fisher[2,3],
resIobs.theta.true[2,3,]-fisher[2,3]))
EstF11.est <- c(EstF11.est,c(resIsco.theta.est[1,1,]-fisher[1,1],
resIobs.theta.est[1,1,]-fisher[1,1]))
EstF22.est <- c(EstF22.est,c(resIsco.theta.est[2,2,]-fisher[2,2],
resIobs.theta.est[2,2,]-fisher[2,2]))
EstF33.est <- c(EstF33.est,c(resIsco.theta.est[3,3,]-fisher[3,3],
resIobs.theta.est[3,3,]-fisher[3,3]))
EstF12.est <- c(EstF12.est,c(resIsco.theta.est[1,2,]-fisher[1,2],
resIobs.theta.est[1,2,]-fisher[1,2]))
EstF13.est <- c(EstF13.est,c(resIsco.theta.est[1,3,]-fisher[1,3],
resIobs.theta.est[1,3,]-fisher[1,3]))
EstF23.est <- c(EstF23.est,c(resIsco.theta.est[2,3,]-fisher[2,3],
resIobs.theta.est[2,3,]-fisher[2,3]))
}
DataRes <- data.frame(EstF11.true=EstF11.true, EstF22.true=EstF22.true,
EstF33.true=EstF33.true, EstF12.true=EstF12.true,
EstF13.true=EstF13.true, EstF23.true=EstF23.true,
EstF11.est=EstF11.est, EstF22.est=EstF22.est,
EstF33.est=EstF33.est, EstF12.est=EstF12.est,
EstF13.est=EstF13.est, EstF23.est=EstF23.est,
beta.est=beta.est, eta2.est=eta2.est, sigma2.est=sigma2.est,
Estimate=rep(c(rep('I n,sco',nsim),rep('I n,obs',nsim)),
length(seq.n)),
n=rep(seq.n,each=nsim*2)
)
save(DataRes,file="Rfiles/simusLMM.Rdata")
DataRes.n20 <- DataRes %>% filter(n==20)
str(DataRes.n20)
DataRes.n20.Isco <- DataRes.n20 %>% filter(Estimate=="I n,sco")
str(DataRes.n20.Isco)
DataRes.n100 <- DataRes %>% filter(n==100)
DataRes.n100.Isco <- DataRes.n100 %>% filter(Estimate=="I n,sco")
DataRes.n100.Iobs <- DataRes.n100 %>% filter(Estimate=="I n,obs")
DataRes.n500 <- DataRes %>% filter(n==500)
DataRes.n500.Isco <- DataRes.n500 %>% filter(Estimate=="I n,sco")
DataRes.n500.Isco <- DataRes.n500 %>% filter(Estimate=="I n,sco")
DataRes.n500.Iobs <- DataRes.n500 %>% filter(Estimate=="I n,obs")
mIobs20 <- c(mean(DataRes.n20.Isco$EstF11.true),mean(DataRes.n20.Isco$EstF22.true),
mean(DataRes.n20.Isco$EstF33.true),mean(DataRes.n20.Isco$EstF12.true),
mean(DataRes.n20.Isco$EstF13.true),mean(DataRes.n20.Isco$EstF23.true))
mIobs20
DataRes.n20 <- DataRes %>% filter(n==20)
DataRes.n20.Isco <- DataRes.n20 %>% filter(Estimate=="I n,sco")
DataRes.n20.Iobs <- DataRes.n20 %>% filter(Estimate=="I n,obs")
mIsco20 <- c(mean(sqrt(20)*DataRes.n20.Isco$EstF11.true),mean(sqrt(20)*DataRes.n20.Isco$EstF22.true),
mean(sqrt(20)*DataRes.n20.Isco$EstF33.true),mean(sqrt(20)*DataRes.n20.Isco$EstF12.true),
mean(sqrt(20)*DataRes.n20.Isco$EstF13.true),mean(sqrt(20)*DataRes.n20.Isco$EstF23.true))
mIobs20 <- c(mean(sqrt(20)*DataRes.n20.Iobs$EstF11.true),mean(sqrt(20)*DataRes.n20.Iobs$EstF22.true),
mean(sqrt(20)*DataRes.n20.Iobs$EstF33.true),mean(sqrt(20)*DataRes.n20.Iobs$EstF12.true),
mean(sqrt(20)*DataRes.n20.Iobs$EstF13.true),mean(sqrt(20)*DataRes.n20.Iobs$EstF23.true))
DataRes.n100 <- DataRes %>% filter(n==100)
DataRes.n100.Isco <- DataRes.n100 %>% filter(Estimate=="I n,sco")
DataRes.n100.Iobs <- DataRes.n100 %>% filter(Estimate=="I n,obs")
mIsco100 <- c(mean(sqrt(100)*DataRes.n100.Isco$EstF11.true),mean(sqrt(100)*DataRes.n100.Isco$EstF22.true),
mean(sqrt(100)*DataRes.n100.Isco$EstF33.true),mean(sqrt(100)*DataRes.n100.Isco$EstF12.true),
mean(sqrt(100)*DataRes.n100.Isco$EstF13.true),mean(sqrt(100)*DataRes.n100.Isco$EstF23.true))
mIobs100 <- c(mean(sqrt(100)*DataRes.n100.Iobs$EstF11.true),mean(sqrt(100)*DataRes.n100.Iobs$EstF22.true),
mean(sqrt(100)*DataRes.n100.Iobs$EstF33.true),mean(sqrt(100)*DataRes.n100.Iobs$EstF12.true),
mean(sqrt(100)*DataRes.n100.Iobs$EstF13.true),mean(sqrt(100)*DataRes.n100.Iobs$EstF23.true))
DataRes.n500 <- DataRes %>% filter(n==500)
DataRes.n500.Isco <- DataRes.n500 %>% filter(Estimate=="I n,sco")
DataRes.n500.Iobs <- DataRes.n500 %>% filter(Estimate=="I n,obs")
mIsco500 <- c(mean(sqrt(500)*DataRes.n500.Isco$EstF11.true),mean(sqrt(500)*DataRes.n500.Isco$EstF22.true),
mean(sqrt(500)*DataRes.n500.Isco$EstF33.true),mean(sqrt(500)*DataRes.n500.Isco$EstF12.true),
mean(sqrt(500)*DataRes.n500.Isco$EstF13.true),mean(sqrt(500)*DataRes.n500.Isco$EstF23.true))
mIobs500 <- c(mean(sqrt(500)*DataRes.n500.Iobs$EstF11.true),mean(sqrt(500)*DataRes.n500.Iobs$EstF22.true),
mean(sqrt(500)*DataRes.n500.Iobs$EstF33.true),mean(sqrt(500)*DataRes.n500.Iobs$EstF12.true),
mean(sqrt(500)*DataRes.n500.Iobs$EstF13.true),mean(sqrt(500)*DataRes.n500.Iobs$EstF23.true))
